# worker プロセスのユーザ名
user  nginx;
# worker プロセスの数
worker_processes  1;
# プロセス数はデフォルトで1となっていますが worker_processes auto; とすることで、CPUコア数と同数のプロセスを選択することができます。

# エラーログの出力先とログレベルの設定です。
error_log  /var/log/nginx/error.log warn;
# ログレベルには debug, info, notice, warn, error, crit, alert, emerg が設定可能です。

# プロセスIDの記載先となるPIDファイルの格納先の指定です。
pid        /var/run/nginx.pid;


# モジュール名 { } という形で、それぞれのモジュールに対する設定を行います。
# 指定したモジュールのスコープは { } で囲まれた範囲となり、これをコンテキストと呼びます。
events {
    # worker_connections で、イベントループを行う worker プロセスで同時に受付可能な接続数を定義しています。
    worker_connections  1024;
}

http {
    server {
	listen 80;
	server_name localhost;
	location / {
	    proxy_pass http://host.docker.internal:3000/;
	    proxy_redirect off;
     	}
    }
    # 追加設定-1. server_tokens off; => Nginxのサーバー情報をResponseヘッダーから除外する
    server_tokens off;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    # 追加設定-2. X-Frame-Options（クリックジャッキング対策（add_header）)
    add_header X-Frame-Options SAMEORIGIN;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
}
